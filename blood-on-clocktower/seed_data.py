"""Script pour peupler la base de donn√©es avec les donn√©es de Trouble Brewing."""
from app import create_app, db
from app.models import Edition, Character

def seed_database():
    """Peuple la base de donn√©es avec l'√©dition Trouble Brewing et ses personnages."""
    
    app = create_app()
    
    with app.app_context():
        # Supprimer toutes les donn√©es existantes
        print("üóëÔ∏è  Nettoyage de la base de donn√©es...")
        db.drop_all()
        db.create_all()
        
        # Cr√©er l'√©dition Trouble Brewing
        print("üìö Cr√©ation de l'√©dition Trouble Brewing...")
        trouble_brewing = Edition(
            name="Trouble Brewing",
            description="L'√©dition de base, parfaite pour les d√©butants. Un d√©mon, des sbires, et un village qui doit d√©masquer le Mal.",
            difficulty_level=1
        )
        db.session.add(trouble_brewing)
        db.session.commit()
        
        # Personnages TOWNSFOLK (Villageois)
        print("üë• Ajout des Villageois...")
        townsfolk = [
            {
                'name': 'Washerwoman',
                'ability_description': "Vous commencez en sachant qu'un Villageois sp√©cifique est en jeu (entre 2 joueurs).",
                'first_night': 11,
                'other_nights': None,
                'remind_tokens': ['Villageois', 'Fausse info']
            },
            {
                'name': 'Librarian',
                'ability_description': "Vous commencez en sachant qu'un √âtranger sp√©cifique est en jeu (entre 2 joueurs).",
                'first_night': 12,
                'other_nights': None,
                'remind_tokens': ['√âtranger', 'Fausse info']
            },
            {
                'name': 'Investigator',
                'ability_description': "Vous commencez en sachant qu'un Sbire sp√©cifique est en jeu (entre 2 joueurs).",
                'first_night': 13,
                'other_nights': None,
                'remind_tokens': ['Sbire', 'Fausse info']
            },
            {
                'name': 'Chef',
                'ability_description': "Vous commencez en sachant combien de paires de joueurs mal√©fiques sont assises adjacentes.",
                'first_night': 14,
                'other_nights': None,
                'remind_tokens': ['Paire']
            },
            {
                'name': 'Empath',
                'ability_description': "Chaque nuit, vous apprenez combien de vos voisins vivants sont mal√©fiques.",
                'first_night': 15,
                'other_nights': 26,
                'remind_tokens': ['Mal√©fique']
            },
            {
                'name': 'Fortune Teller',
                'ability_description': "Chaque nuit, choisissez 2 joueurs : vous apprenez si l'un d'eux est le D√©mon. Il y a un Faux Positif.",
                'first_night': 16,
                'other_nights': 27,
                'remind_tokens': ['Faux Positif']
            },
            {
                'name': 'Undertaker',
                'ability_description': "Chaque nuit*, vous apprenez quel personnage a √©t√© ex√©cut√© aujourd'hui.",
                'first_night': None,
                'other_nights': 32,
                'remind_tokens': ['Ex√©cut√©']
            },
            {
                'name': 'Monk',
                'ability_description': "Chaque nuit*, choisissez un joueur (pas vous) : il est prot√©g√© du D√©mon cette nuit.",
                'first_night': None,
                'other_nights': 7,
                'remind_tokens': ['Prot√©g√©']
            },
            {
                'name': 'Ravenkeeper',
                'ability_description': "Si vous mourez la nuit, vous √™tes r√©veill√© et choisissez un joueur : vous apprenez son personnage.",
                'first_night': None,
                'other_nights': 31,
                'remind_tokens': []
            },
            {
                'name': 'Virgin',
                'ability_description': "La premi√®re fois que vous √™tes nomin√©, si le nominateur est un Villageois, il est ex√©cut√© imm√©diatement.",
                'first_night': None,
                'other_nights': None,
                'remind_tokens': ['Pas utilis√©']
            },
            {
                'name': 'Slayer',
                'ability_description': "Une fois par partie, pendant le jour, d√©clarez publiquement que vous utilisez cette capacit√© pour tuer un joueur : s'il est le D√©mon, il meurt.",
                'first_night': None,
                'other_nights': None,
                'remind_tokens': ['Pas utilis√©']
            },
            {
                'name': 'Soldier',
                'ability_description': "Vous √™tes prot√©g√© du D√©mon.",
                'first_night': None,
                'other_nights': None,
                'remind_tokens': []
            },
            {
                'name': 'Mayor',
                'ability_description': "S'il ne reste que 3 joueurs en vie et qu'aucune ex√©cution n'a lieu, votre √©quipe gagne. Si vous mourez la nuit, un autre joueur peut mourir √† la place.",
                'first_night': None,
                'other_nights': None,
                'remind_tokens': []
            }
        ]
        
        for char_data in townsfolk:
            character = Character(
                name=char_data['name'],
                edition_id=trouble_brewing.id,
                character_type=Character.TOWNSFOLK,
                ability_description=char_data['ability_description'],
                first_night=char_data['first_night'],
                other_nights=char_data['other_nights'],
                remind_tokens=char_data['remind_tokens']
            )
            db.session.add(character)
        
        # Personnages OUTSIDER (√âtrangers)
        print("üé≠ Ajout des √âtrangers...")
        outsiders = [
            {
                'name': 'Drunk',
                'ability_description': "Vous ne savez pas que vous √™tes le Drunk. Vous pensez √™tre un Villageois, mais vous n'√™tes pas ce personnage.",
                'first_night': None,
                'other_nights': None,
                'setup_info': "Le Drunk pense avoir un r√¥le de Villageois qu'il n'a pas.",
                'remind_tokens': ['Ivre']
            },
            {
                'name': 'Recluse',
                'ability_description': "Vous pouvez appara√Ætre comme mal√©fique ou comme un Sbire/D√©mon aux capacit√©s qui vous ciblent, m√™me si vous √™tes bon.",
                'first_night': None,
                'other_nights': None,
                'remind_tokens': ['Faux Mal√©fique']
            },
            {
                'name': 'Saint',
                'ability_description': "Si vous √™tes ex√©cut√©, votre √©quipe perd.",
                'first_night': None,
                'other_nights': None,
                'remind_tokens': []
            },
            {
                'name': 'Butler',
                'ability_description': "Chaque nuit, choisissez un joueur (pas vous) : demain, vous ne pouvez voter que s'il vote.",
                'first_night': 17,
                'other_nights': 28,
                'remind_tokens': ['Ma√Ætre']
            }
        ]
        
        for char_data in outsiders:
            character = Character(
                name=char_data['name'],
                edition_id=trouble_brewing.id,
                character_type=Character.OUTSIDER,
                ability_description=char_data['ability_description'],
                first_night=char_data.get('first_night'),
                other_nights=char_data.get('other_nights'),
                setup_info=char_data.get('setup_info'),
                remind_tokens=char_data.get('remind_tokens', [])
            )
            db.session.add(character)
        
        # Personnages MINION (Sbires)
        print("üòà Ajout des Sbires...")
        minions = [
            {
                'name': 'Poisoner',
                'ability_description': "Chaque nuit, choisissez un joueur : il est empoisonn√© cette nuit et le jour suivant.",
                'first_night': 6,
                'other_nights': 4,
                'remind_tokens': ['Empoisonn√©']
            },
            {
                'name': 'Spy',
                'ability_description': "Chaque nuit, vous voyez le Grimoire. Vous pouvez appara√Ætre comme bon, comme Villageois/√âtranger, ou comme un personnage diff√©rent.",
                'first_night': 25,
                'other_nights': 42,
                'remind_tokens': []
            },
            {
                'name': 'Scarlet Woman',
                'ability_description': "Si 5 joueurs ou plus sont en vie et que le D√©mon meurt, vous devenez le D√©mon.",
                'first_night': None,
                'other_nights': 12,
                'remind_tokens': ['Scarlet Woman']
            },
            {
                'name': 'Baron',
                'ability_description': "Il y a 2 √âtrangers suppl√©mentaires en jeu. [+2 √âtrangers]",
                'first_night': None,
                'other_nights': None,
                'setup_info': "Remplacer 2 Villageois par 2 √âtrangers suppl√©mentaires.",
                'remind_tokens': []
            }
        ]
        
        for char_data in minions:
            character = Character(
                name=char_data['name'],
                edition_id=trouble_brewing.id,
                character_type=Character.MINION,
                ability_description=char_data['ability_description'],
                first_night=char_data.get('first_night'),
                other_nights=char_data.get('other_nights'),
                setup_info=char_data.get('setup_info'),
                remind_tokens=char_data.get('remind_tokens', [])
            )
            db.session.add(character)
        
        # Personnage DEMON (D√©mon)
        print("üëπ Ajout du D√©mon...")
        demons = [
            {
                'name': 'Imp',
                'ability_description': "Chaque nuit*, choisissez un joueur : il meurt. Si vous vous tuez, un Sbire devient l'Imp.",
                'first_night': None,
                'other_nights': 15,
                'remind_tokens': ['Mort']
            }
        ]
        
        for char_data in demons:
            character = Character(
                name=char_data['name'],
                edition_id=trouble_brewing.id,
                character_type=Character.DEMON,
                ability_description=char_data['ability_description'],
                first_night=char_data.get('first_night'),
                other_nights=char_data.get('other_nights'),
                remind_tokens=char_data.get('remind_tokens', [])
            )
            db.session.add(character)
        
        # Commit final
        db.session.commit()
        
        print("\n‚úÖ Base de donn√©es peupl√©e avec succ√®s !")
        print(f"   - 1 √©dition cr√©√©e")
        print(f"   - 13 Villageois")
        print(f"   - 4 √âtrangers")
        print(f"   - 4 Sbires")
        print(f"   - 1 D√©mon")
        print(f"   Total : {Character.query.count()} personnages\n")

if __name__ == '__main__':
    seed_database()

